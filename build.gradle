import org.jetbrains.kotlin.gradle.tasks.KotlinCompile

plugins {
    id "org.springframework.boot" version "3.2.1"
    id "io.spring.dependency-management" version "1.1.4"
    id "org.jetbrains.kotlin.jvm" version "1.9.21"
    id "org.jetbrains.kotlin.plugin.spring" version "1.9.21"
}

group = "com.github.ngnhub"
version = "0.0.1-SNAPSHOT"

ext {
    exposedVersion = "0.45.0"
    swaggerVersion = "2.3.0"
    mapstructVersion = "1.5.5.Final"
    mockKVersion = "1.13.8"
    assertJVersion = "3.24.2"
}

java {
    sourceCompatibility = "17"
}

repositories {
    mavenCentral()
}

dependencies {
    // Spring
    implementation "org.springframework.boot:spring-boot-starter-web"
    implementation "org.springframework.boot:spring-boot-starter-data-jpa"
    implementation "org.springframework.boot:spring-boot-starter-validation"

    implementation "com.fasterxml.jackson.module:jackson-module-kotlin"
    implementation "org.jetbrains.kotlin:kotlin-reflect"
    implementation "org.springdoc:springdoc-openapi-starter-webmvc-ui:$swaggerVersion"

    // DB
    implementation "com.mysql:mysql-connector-j:8.2.0"
    implementation "org.flywaydb:flyway-core"
    implementation "org.flywaydb:flyway-mysql"
    implementation "org.jetbrains.exposed:exposed-spring-boot-starter:$exposedVersion"
    implementation "org.jetbrains.exposed:exposed-java-time:$exposedVersion"

    testImplementation "org.springframework.boot:spring-boot-starter-test"
    testImplementation "io.mockk:mockk:$mockKVersion"
    testImplementation "org.assertj:assertj-core:$assertJVersion"
}

tasks.withType(KotlinCompile) {
    kotlinOptions {
        freeCompilerArgs += "-Xjsr305=strict"
        jvmTarget = "17"
    }
}

tasks.named("test") {
    useJUnitPlatform()
}

test {
    useJUnitPlatform()
}
